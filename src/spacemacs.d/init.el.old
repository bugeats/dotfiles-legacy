;; -*- mode: emacs-lisp -*-

(defun dotspacemacs/layers ()
  "
  Configuration Layers declaration.
  You should not put any user code in this function besides modifying the variable values.
  "
  (setq-default
   ;; Base distribution to use. This is a layer contained in the directory `+distribution'.
   ;; For now available distributions are `spacemacs-base' or `spacemacs'. (default 'spacemacs)
   dotspacemacs-distribution 'spacemacs
   ;; List of configuration layers to load.
   dotspacemacs-configuration-layers
   '(
     ;; Example of useful layers you may want to use right away.
     ;; Uncomment some layer names and press <SPC f e R> to install them.
     auto-completion
     better-defaults
     clojure
     emacs-lisp
     git
     helm
     javascript
     markdown
     react
     syntax-checking
     theming
     version-control
     vimscript
     (shell :variables
              shell-default-shell 'ansi-term
              shell-default-position 'right)
     )
   ;; List of additional packages that will be installed without being wrapped in a layer.
   dotspacemacs-additional-packages '(paren-face)

   ;; A list of packages that will not be installed and loaded.
   dotspacemacs-excluded-packages '(
     vi-tilde-fringe
     vim-powerline
     rainbow-delimiters)
   )
)

(defun dotspacemacs/init ()
  "
  This function is called at the very startup of Spacemacs initialization before layers configuration.
  You should not put any user code in there besides modifying the variable values.
  "
  (setq-default
   dotspacemacs-editing-style 'vim
   dotspacemacs-emacs-command-key "SPC"
   dotspacemacs-emacs-leader-key "M-m"
   dotspacemacs-leader-key "SPC"

   dotspacemacs-default-font '("Droid Sans Mono" :size 13 :weight normal :width normal :powerline-scale 1)
   dotspacemacs-check-for-update t
   dotspacemacs-startup-banner nil

   ;; Possible values for list-type are: `recents' `bookmarks' `projects' `agenda' `todos'."
   dotspacemacs-startup-lists '((recents . 5) (projects . 20))
   dotspacemacs-display-default-layout t ; "Default" layout name is displayed in the mode-line.
   dotspacemacs-fullscreen-at-startup t

   ;; Select a scope to highlight delimiters. Possible values are `any',
   ;; `current', `all' or `nil'. Default is `all' (highlight any scope and
   ;; emphasis the current one). (default 'all)
   dotspacemacs-highlight-delimiters nil

   )
  )


;; Color Theme Palette ---------------------------------------------------------

(defun dotspacemacs/user-init ()
  "
  Initialization function for user code.
  It is called immediately after `dotspacemacs/init', before layer configuration executes.
  This function is mostly useful for variables that need to be set before packages are loaded.
  If you are unsure, you should try in setting them in `dotspacemacs/user-config' first.
  "
  (setq p-a1 "#d8af8e")
  (setq p-a2 "#a57b55")
  (setq p-a3 "#645851")
  (setq p-a4 "#413c39")
  (setq p-a5 "#2d2b29")
  (setq p-a6 "#272524")
  (setq p-b1 "#94c390")
  (setq p-b2 "#5d9058")
  (setq p-b3 "#525e51")
  (setq p-b4 "#393e39")
  (setq p-b5 "#2a2c29")
  (setq p-b6 "#242624")
  (setq p-d1 "#b8b8aa")
  (setq p-d2 "#84847c")
  (setq p-d3 "#5b5b56")
  (setq p-d4 "#3d3d3a")
  (setq p-d5 "#2c2c29")
  (setq p-d6 "#262624")
  (setq p-g1 "#bbba81")
  (setq p-g2 "#888744")
  (setq p-g3 "#5c5b4e")
  (setq p-g4 "#3d3d37")
  (setq p-g5 "#2c2c29")
  (setq p-g6 "#262624")
  (setq p-k1 "#83bfda")
  (setq p-k2 "#418da9")
  (setq p-k3 "#4f5d64")
  (setq p-k4 "#383e41")
  (setq p-k5 "#292c2d")
  (setq p-k6 "#242627")
  (setq p-t1 "#71c6af")
  (setq p-t2 "#22947b")
  (setq p-t3 "#4b5f59")
  (setq p-t4 "#363f3c")
  (setq p-t5 "#282c2b")
  (setq p-t6 "#242625")

  ;; TODO this shit doesn't work
  ;; (defface control-punctuation-face
  ;;   '((t (:background p-k1)))
  ;;   "Description here?")

  ;; (font-lock-add-keywords 'emacs-lisp-mode
  ;;                         '(("foo" . control-punctuation-face)))

  (custom-set-variables '(spacemacs-theme-custom-colors
                          '((base       . p-d1) ; Base text color
                            (act1       . p-a3) ; One of mode-line's active colors.
                            (act2       . p-a4) ; The other active color of mode-line.
                            (base-dim   . p-d2) ; A dimmer version of the normal text color.
                            (bg1        . p-a6) ; The background color.
                            (bg2        . p-a5) ; A darker background color. Used to highlight current line.
                            (bg3        . p-a5) ; Yet another darker shade of the background color.
                            (bg4        . p-a5) ; The darkest background color.
                            (border     . p-a4) ; A border line color. Used in mode-line borders.
                            (cblk       . p-a2) ; A code block color. Used in org's code blocks.
                            (cblk-bg    . p-a6) ; The background color of a code block.
                            (cblk-ln    . p-a2) ; A code block header line.
                            (cblk-ln-bg . p-a6) ; The background of a code block header line.
                            (comment    . p-d2) ; A comment.
                            (comment-bg . p-a6) ; The background color of a comment. To disable this, customize spacemacs-theme-comment-bg.
                            (comp       . p-b1) ; A complementary color.
                            (const      . p-b1) ; A constant.
                            (cursor     . p-k1) ; The cursor/point color.
                            (err        . p-k1) ; errors.
                            (func       . p-d1) ; functions.
                            (head1      . p-d1) ; Level 1 of a heading. Used in org's headings.
                            (head1-bg   . p-a6) ; The background of level 2 headings. To disable this, customize spacemacs-theme-org-highlight.
                            (head2      . p-d1) ; Level 2 headings.
                            (head2-bg   . p-a6) ; Level 2 headings background.
                            (head3      . p-d1) ; Level 3 headings.
                            (head3-bg   . p-a6) ; Level 3 headings background.
                            (head4      . p-d1) ; Level 4 headings.
                            (head4-bg   . p-a6) ; Level 4 headings background.
                            (highlight  . p-a3) ; A highlighted area.
                            (keyword    . p-b1) ; A keyword or a builtin color.
                            (lnum       . p-a3) ; Line numbers.
                            (mat        . p-k1) ; A matched color. Used in matching parens, brackets and tags.
                            (meta       . p-a3) ; A meta line. Used in org's meta line.
                            (str        . p-g1) ; A string.
                            (suc        . p-b1) ; To indicate success. Opposite of error.
                            (ttip       . p-a3) ; Tooltip color.
                            (ttip-bg    . p-a5) ; Tooltip background color.
                            (ttip-sl    . p-a4) ; Tooltip selection color.
                            (type       . p-b2) ; A type color.
                            (var        . p-b1) ; A variable color.
                            (war        . p-k1)))) ; A warning color.

  (setq theming-modifications '((spacemacs-dark '(default :background p-a6 :foreground p-d1)
                                                '(js2-function-param :foreground p-d1)
                                                '(term :background p-a5)
                                                '(font-lock-constant-face :foreground nil :underline nil))))

  (custom-set-faces
   '(parenthesis ((t (:foreground "#a57b55")))))

  )

(defun dotspacemacs/user-config ()
  "
  Configuration function for user code.
  This function is called at the very end of Spacemacs initialization after layers configuration.
  This is the place where most of your configurations should be done.
  Unless it is explicitly specified that a variable should be set before a package is loaded, you should place your code here.
  "
  (spacemacs/toggle-line-numbers-on)
  (spacemacs/toggle-truncate-lines-on)
  (spacemacs/toggle-golden-ratio-on)

  (setq git-gutter-fr+-side 'left-fringe) ; git gutter marks near the line numbers
  (setq powerline-default-separator 'nil)
  (setq neo-theme 'nerd)

  ;; TODO make this work
  ;; (setq paren-face-regexp (rx (any "{}();,")))
  (add-to-list 'paren-face-modes 'emacs-lisp-mode)
  (add-to-list 'paren-face-modes 'javascript-mode)
  (add-to-list 'paren-face-modes 'j2-mode)
  (global-paren-face-mode 1)

  (add-hook 'hack-local-variables-hook (lambda () (setq truncate-lines t))) ; disable text folding everwhere

  ;; Whitespace ----------------------------------------------------------------

  ;; (spacemacs/toggle-whitespace)

  ;; ;; make whitespace-mode use just basic coloring
  ;; ;;(setq whitespace-style (quote (spaces tabs newline space-mark tab-mark newline-mark)))
  ;; (setq whitespace-display-mappings
  ;;       ;; all numbers are Unicode codepoint in decimal. ⁖ (insert-char 182 1)
  ;;       '(
  ;;         (space-mark 183 [183] [46]) ; 32 SPACE 「 」, 183 MIDDLE DOT 「·」, 46 FULL STOP 「.」
  ;;         (newline-mark 160 [182 10]) ; 10 LINE FEED
  ;;         (tab-mark 9655) ; 9 TAB, 9655 WHITE RIGHT-POINTING TRIANGLE 「▷」
  ;;         ))

  ;; (set-face-attribute 'whitespace-space nil :background nil :foreground p-a3)

  )

;; -----------------------------------------------------------------------------

;; Do not write anything past this comment. This is where Emacs will auto-generate custom variable definitions.

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(package-selected-packages
   (quote
    (powerline parent-mode smartparens iedit anzu f paren-face vi-tilde-fringe rainbow-delimiters xterm-color ws-butler window-numbering which-key web-mode web-beautify volatile-highlights vimrc-mode uuidgen use-package toc-org tagedit spacemacs-theme spaceline smeargle slim-mode shell-pop scss-mode sass-mode restart-emacs quelpa pug-mode popwin persp-mode pcre2el paradox orgit org-plus-contrib org-bullets open-junk-file neotree mwim multi-term move-text mmm-mode markdown-toc magit-gitflow macrostep lorem-ipsum livid-mode linum-relative link-hint less-css-mode json-mode js2-refactor js-doc info+ indent-guide ido-vertical-mode hungry-delete hl-todo highlight-parentheses highlight-numbers highlight-indentation hide-comnt help-fns+ helm-themes helm-swoop helm-projectile helm-mode-manager helm-make helm-gitignore helm-flx helm-descbinds helm-css-scss helm-company helm-c-yasnippet helm-ag google-translate golden-ratio gitconfig-mode gitattributes-mode git-timemachine git-messenger git-link git-gutter-fringe git-gutter-fringe+ gh-md flycheck-pos-tip flx-ido fill-column-indicator fancy-battery eyebrowse expand-region exec-path-from-shell evil-visualstar evil-visual-mark-mode evil-unimpaired evil-tutor evil-surround evil-search-highlight-persist evil-numbers evil-nerd-commenter evil-mc evil-matchit evil-magit evil-lisp-state evil-indent-plus evil-iedit-state evil-exchange evil-escape evil-ediff evil-args evil-anzu eshell-z eshell-prompt-extras esh-help emmet-mode elisp-slime-nav dumb-jump diff-hl define-word dactyl-mode company-web company-tern company-statistics column-enforce-mode coffee-mode clojure-snippets clj-refactor clean-aindent-mode cider-eval-sexp-fu auto-yasnippet auto-highlight-symbol auto-compile aggressive-indent adaptive-wrap ace-window ace-link ace-jump-helm-line ac-ispell)))
 '(spacemacs-theme-custom-colors
   (quote
    ((base . p-d1)
     (act1 . p-a3)
     (act2 . p-a4)
     (base-dim . p-d2)
     (bg1 . p-a6)
     (bg2 . p-a5)
     (bg3 . p-a5)
     (bg4 . p-a5)
     (border . p-a4)
     (cblk . p-a2)
     (cblk-bg . p-a6)
     (cblk-ln . p-a2)
     (cblk-ln-bg . p-a6)
     (comment . p-d2)
     (comment-bg . p-a6)
     (comp . p-b1)
     (const . p-b1)
     (cursor . p-k1)
     (err . p-k1)
     (func . p-d1)
     (head1 . p-d1)
     (head1-bg . p-a6)
     (head2 . p-d1)
     (head2-bg . p-a6)
     (head3 . p-d1)
     (head3-bg . p-a6)
     (head4 . p-d1)
     (head4-bg . p-a6)
     (highlight . p-a3)
     (keyword . p-b1)
     (lnum . p-a3)
     (mat . p-k1)
     (meta . p-a3)
     (str . p-g1)
     (suc . p-b1)
     (ttip . p-a3)
     (ttip-bg . p-a5)
     (ttip-sl . p-a4)
     (type . p-b2)
     (var . p-b1)
     (war . p-k1)))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(\` ((t ((default :background p-a6 :foreground p-d1)))))
 '(font-lock-constant-face ((t (:foreground nil :underline nil))))
 '(parenthesis ((t (:foreground "#a57b55")))))
